# This file was generated by the Gradle 'init' task.
# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format

[versions]
assertj = "3.27.4"
awsSDK = "2.33.11"
codehead-test = "3.0.5"
codehead-metrics = "3.0.5"
commons-codec = "1.19.0"
dagger = "2.57.1"
dropwizard = "5.0.0"
guava = "33.4.8-jre"
hsqldb = '2.7.4'
immutables = '2.11.3'
jackson = '2.20.0'
jdbi = '3.49.5'
junit-jupiter = "5.13.4"
liquibase = '4.33.0'
micrometer = '1.15.4'
mokito = '5.19.0'
pgjdbc = '42.7.7'
slf4j = '2.0.17'
rs-api = "4.0.0"

[libraries]
assertj = { module = "org.assertj:assertj-core", version.ref = "assertj" }
aws-sdk-ddb = { module = "software.amazon.awssdk:dynamodb", version.ref = "awsSDK" }
codehead-test = { module = "com.codeheadsystems:codehead-test", version.ref = "codehead-test" }
codehead-metrics = { module = "com.codeheadsystems:metrics", version.ref = "codehead-metrics" }
codehead-metrics-declarative = { module = "com.codeheadsystems:metrics-declarative", version.ref = "codehead-metrics" }
codehead-metrics-micrometer = { module = "com.codeheadsystems:metrics-micrometer", version.ref = "codehead-metrics" }
codehead-metrics-test = { module = "com.codeheadsystems:metrics-test", version.ref = "codehead-metrics" }
commons-codec = { module = "commons-codec:commons-codec", version.ref = "commons-codec" }
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
dropwizard-core = { module = "io.dropwizard:dropwizard-core", version.ref = "dropwizard" }
dropwizard-testing = { module = "io.dropwizard:dropwizard-testing", version.ref = "dropwizard" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
hsqldb = { module = "org.hsqldb:hsqldb", version.ref = "hsqldb" }
immutables-value = { module = "org.immutables:value", version.ref = "immutables" }
immutables-annotations = { module = "org.immutables:value-annotations", version.ref = "immutables" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson" }
jackson-datatype-jdk8 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jdk8", version.ref = "jackson" }
jackson-dataformat-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson" }
jarkarta-rs-api = { module = "jakarta.ws.rs:jakarta.ws.rs-api", version.ref = "rs-api" }
javax-inject = { module = "javax.inject:javax.inject", version = "1" }
jdbi-core = {module = "org.jdbi:jdbi3-core", version.ref = "jdbi" }
jdbi-caffeine = {module = "org.jdbi:jdbi3-caffeine-cache", version.ref = "jdbi" }
jdbi-noopcache = {module = "org.jdbi:jdbi3-noop-cache", version.ref = "jdbi" }
jdbi-testing = {module = "org.jdbi:jdbi3-testing", version.ref = "jdbi" }
jdbi-testcontainers = {module = "org.jdbi:jdbi3-testcontainers", version.ref = "jdbi" }
jdbi-guava = {module = "org.jdbi:jdbi3-guava", version.ref = "jdbi" }
jdbi-jackson2 = {module = "org.jdbi:jdbi3-jackson2", version.ref = "jdbi" }
jdbi-postgres = {module = "org.jdbi:jdbi3-postgres", version.ref = "jdbi" }
jdbi-sqlobject = {module = "org.jdbi:jdbi3-sqlobject", version.ref = "jdbi" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit-jupiter" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit-jupiter" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit-jupiter" }
liquibase-core = { module = "org.liquibase:liquibase-core", version.ref = "liquibase" }
micrometer-core = { module = "io.micrometer:micrometer-core", version.ref = "micrometer" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mokito" }
mockito-junit-jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mokito" }
pgjdbc = { module = "org.postgresql:postgresql", version.ref = "pgjdbc" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }

[bundles]
jdbi = ["jdbi-core", "jdbi-caffeine", "jdbi-noopcache", "jdbi-jackson2", "jdbi-postgres", "jdbi-sqlobject", "pgjdbc"]
jdbi-testing = ["jdbi-testing"]
testing = ["mockito-core", "mockito-junit-jupiter", "assertj", "junit-jupiter", "junit-jupiter-api", "junit-jupiter-engine", "junit-jupiter-params", "codehead-test"]
logging = ["slf4j-api"]
